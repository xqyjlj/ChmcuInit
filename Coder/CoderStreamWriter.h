/**
 **
 ** This program is free software: you can redistribute it and/or modify
 ** it under the terms of the GNU General Public License as published by
 ** the Free Software Foundation, either version 3 of the License, or
 ** (at your option) any later version.
 **
 ** This program is distributed in the hope that it will be useful,
 ** but WITHOUT ANY WARRANTY; without even the implied warranty of
 ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ** GNU General Public License for more details.
 **
 ** You should have received a copy of the GNU General Public License
 ** along with this program.  If not, see <http://www.gnu.org/licenses/>.
 **
 **
 ** 该文件是ChmcuInit项目的一部分。
 ** 版权所有2021 xqyjlj 
 **
 ** 本程序是免费软件:您可以重新发布和/或修改它
 ** 根据GNU通用公共许可证的条款，由自由软件基金会，或第三版许可证，或(随您选择)任何更新版本。
 **
 ** 分发此程序是希望它会有用，但没有任何保证：甚至没有默示的保证特定目的的适销性或适用性。有关更多详细信息，请参见GNU通用公共许可证。 
 **
 ** 您应该已经与这个程序一起收到GNU通用公共许可证的副本。如果不是，请参见<http://www.gnu.org/licenses/>。
 ** 
 ** Change Logs:
 ** Date           Author       Notes                    Email
 ** 2021-04-29     xqyjlj       the first version        xqyjlj@126.com
 **/

#ifndef CHMCUINIT_CODERSTREAMWRITER_H
#define CHMCUINIT_CODERSTREAMWRITER_H

#include <QObject>
#include <QTextStream>
#include <QStringList>

class CoderStreamWriter : public QObject
{
public:

    const QString R_void = QString(u8"void");
    const QString R_uint8 = QString(u8"uint8_t");
    const QString R_uint16 = QString(u8"uint16_t");
    const QString R_uint32 = QString(u8"uint32_t");
    const QString R_int8 = QString(u8"int8_t");
    const QString R_int16 = QString(u8"int16_t");
    const QString R_int32 = QString(u8"int32_t");
    const QString R_bool = QString(u8"bool");

    typedef struct tag_FunctionInput_T
    {
        QString inputType;
        QString name;
    } FunctionInput_T;

    typedef struct tag_Function_T
    {
        QString returnType;
        QList<FunctionInput_T> inputs;
        QString name;
        QString briefComment;
        QStringList paramComment;
        QString returnComment;
    } Function_T;

private:

    const QString c_fileHeaderComment = QString(R"(/**
 * @file    %1
 * @brief   %2
 *
 * @attention: This file is generated by ChmcuInit<https://github.com/xqyjlj/ChmcuInit> software.
 *
*/
)");

    const QString c_fileFunctionComment = QString(R"(
/**
 * @brief   %1
 *
 * @param   %2
 *
 * @return  %3
*/
)");

public:
    explicit CoderStreamWriter(QObject *parent, QIODevice *device);

    void writeHeader(const QString &header);

    void writeComment(const QString &comment);

    void writeTag(const QString &comment);

    void writeEndTag();

    void writeFileHeaderComment(const QString &file, const QString &brief);

    void writeFunction(const Function_T &function);

    void writeStartFunction();

    void writeEndFunction();

    void writeElement(const QString &type, const QString &name, const QString &value);

    void writeAttribute(const QString &name, const QString &value);

    void writeCommand(const QString &name, const QStringList &parameters);

    void writeCommand(const QString &name);

    void writeLine();

private:
    QTextStream m_streamWriter;

    QString m_tag;
};

#endif //CHMCUINIT_CODERSTREAMWRITER_H
